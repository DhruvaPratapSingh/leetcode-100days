https://leetcode.com/problems/find-k-th-smallest-pair-distance/description/?envType=daily-question&envId=2024-08-14



class Solution {
public:
   int countPairsWithDistanceLessThanOrEqual(std::vector<int>& nums, int mid) {
    int count = 0;
    int left = 0;
    int n = nums.size();

    for (int right = 0; right < n; right++) {
        while (nums[right] - nums[left] > mid) {
            left++;
        }
        count += right - left;
    }

    return count;
}

int smallestDistancePair(vector<int>& nums, int k) {
    sort(nums.begin(), nums.end()); 
    int low = 0;
    int high = nums.back() - nums.front();

    while (low < high) {
        int mid = low + (high - low) / 2;

        if (countPairsWithDistanceLessThanOrEqual(nums, mid) < k) {
            low = mid + 1;
        } else {
            high = mid;
        }
    }

    return low;
}
};
